plugins {
    id 'software.amazon.lib.jvm'
    alias(libs.plugins.ksp)
}

test {
    useJUnitPlatform()

    maxHeapSize = "2g"
}

dependencies {
    implementation project(':runtime')
    implementation libs.ksp.api

    implementation libs.kotlin.poet
    implementation libs.kotlin.poet.ksp

    implementation libs.auto.service.annotations
    ksp libs.auto.service.ksp

    // Gives us access to annotations.
    implementation libs.kotlin.inject.runtime

    testImplementation libs.assertk
    testImplementation libs.kotlin.compile.testing.core
    testImplementation libs.kotlin.compile.testing.ksp

    testImplementation platform(libs.junit.jupiter.bom)
    testImplementation libs.junit.jupiter.core
    testRuntimeOnly libs.junit.jupiter.launcher

    // Added so that the SymbolProcessor is picked up in tests.
    testImplementation(libs.kotlin.inject.ksp.bugfix) {
        // TODO: Remove this when upgrading to Kotlin 2.0
        exclude group: 'com.google.devtools.ksp', module: 'symbol-processing-api'
    }

    // Bump transitive dependency.
    // TODO: Enable with KSP2 and Kotlin 2.0 again.
    // testImplementation libs.ksp
}
